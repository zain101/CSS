package com.ciphers;

import java.math.BigInteger;

public class ExtendedEuclidean {

	public static int[] extendedEuclideanI(Integer a, Integer b){
		BigInteger u= new BigInteger("1"), v=new BigInteger("0"), p=new BigInteger("0"), q=new BigInteger("1");
		BigInteger x=new BigInteger("0"), y=new BigInteger("0"), rem, quo;
		BigInteger r1=new BigInteger(a), r0=new BigInteger(b.) ;
		do{
			quo = (r1/r0);
			rem = (r1%r0);
			//r1 =  quo * r0 + rem;
			if(rem == 0)
				break;
			r1 = r0; 
			r0 = rem;
			x = u - (quo*p);
			u = p;
			p = x;
			y = v - (quo*q);
			v=q;
			q=y;
		}while(true);
		
		return new int[] {r0, x, y};
	}
	
	/*public static void main(String args[]) {
		int a[] = extendedEuclideanI(36163, 1058);
		System.out.println(a[0]+" "+a[1]+" "+ a[2]);
	}*/
}
